#!/usr/bin/perl

#wiki_passwd
#
#Script for automatically getting user entries for the internal dashboard/wiki from NIS 
#and the system shadow file (cross-referencing the System Sudoers file to designate wiki administrators)
#
#By [John Leary](git@jleary.cc)
#Dependencies: NIS, coreutils, grep, dokuwiki, cs dashboard


#This is not elegant, but it works
$HTACCESS = "/srv/apache/.htpasswd"; #Path to .htaccess file
$WIKIAUTH = "/srv/apache/html/wiki/conf/users.auth.php"; #PAth to Doku Wiki Auth file
$WIKIDIST = "/srv/apache/html/wiki/conf/users.auth.php.dist"; #path to Doku Auth Dist File
$OPSHOST = "host";
`touch $HTACCESS $WIKIAUTH`;
$DATE     = `date`;
#
#Sanity Test: Is the network reachable and is NIS queriable?
die "Wiki Passwd Error: yptest -u $OPSHOST -m hosts.byname failed\
$HTACCESS & $WIKIAUTH remain unchanged\
Is the host $OPSHOST have an entry in host.byname\
and is hosts.byname shared by nis?" if(` yptest -u $OPSHOST -m hosts.byname | tail -1` ne "All tests passed\n");


@users = split(/ +/, `ypmatch operator netgroup | sed -e 's/(\-,//g' -e 's/,cs.umb.edu)//g' -e 's/root//g' -e 's/omit0//g' -e 's/omit1//g'`);
@admins = split(/ +/, ` grep 'ALL=(ALL) ALL' /etc/sudoers | cut -f 1 | sed -e '/^#/d' -e 's/root//g' -e 's/omit2//g' |xargs`);
#Remove \n from the last user as this will break wiki authorization groups
chomp($users[-1]);
chomp($admins[-1]);

#Htaccess file generation
#Clear the file
`echo "#Generated by wiki_passwd on $DATE" > $HTACCESS`;
foreach $i (@users){
	chomp($i);
	@shadow=split( /:/ ,`grep -P '^$i:' /etc/shadow`);	
	writeout("$i:$shadow[1]","$HTACCESS");
}

#Wiki authentication file generation
#Clear the file
`cat $WIKIDIST > $WIKIAUTH`; #Place contents of Wiki Auth Dist file on top of the user information
`echo "#Generated by wiki_passwd on $DATE" >> $WIKIAUTH`;
foreach $i (@users){
	chomp($i);
	@shadow=split( /:/ ,`grep -P '^$i:' /etc/shadow`);	
	@ypentry=split( /:/ ,`ypmatch $i passwd`);	
	#if the user is an admin, set the level to admin,user
	$level = "user";
	$level = "admin,user" if grep{$_ eq $i} @admins;
	writeout("$i:$shadow[1]:@ypentry[4]:$i\@domain.tld:$level","$WIKIAUTH");
}


sub writeout{
#Reusable Function that write the contents of the first argument
#as a line in the file listed in the second argument
        open(OUTP,">>$_[1]") or die $!;
        print OUTP "$_[0]\n";
        close OUTP;
}

